
Label ***
 $0100 = START
 $0112 = OUT4H
 $0106 = START_MSG
 $010D = HALT
*Undef = SKIP4H
 $011D = OUT4H00
 $011F = OUT4H01
 $014A = OUT2H
 $012B = RXCHAR
 $012F = RX00
 $0136 = TXCHAR
 $0147 = TXEXIT
 $0140 = TX00
 $014C = OUTSTRING
 $014C = OUTCHAR
 $014C = WAITSEND
 $014C = TOPMSG

Constant ***
 $FF00 = RXBUFF

Code ***
                ; QBUG Monitor.
                ; Ver 1.0 M-Okada
                ; L Load file
                ; W Write file
                ; S Step trace
                ; G Go
                ; R Dump register
                ; M Dump memory
                
                rxbuff eq $ff00
                ;
                .org 0 ; swi 0
 0000 FEFD00    	jmp start
                .org 8 ; swi 1
 0008 FA0701    	call out4h
 000B FD        	iret
                .org 64 ; swi 8
 0040 FF        	nop
                
                .org $100
                
                start:
 0100 7F0000    	mov sp,0
                
 0103 7D0000    	mov a1,topmsg
                
                start_msg:
 0106 04        	ld r0,[a1]
 0107 B8        	or r0,r0
                
 0108 D7        	inc a1
                
 0109 04        	ld r0,[a1]
 010A A0        	and r0,r0
 010B E4F9      	jnz start_msg
                
                
                halt:
 010D 7E0000    	mov pc,halt
 0110 EEFB      	jmps halt
                
                out4h:	; w1 to hex
 0112 41        	mov r0, r3
 0113 A50F      	and r0,$0F
 0115 8530      	add r0,$30
                
 0117 AD0A      	cmp r0, 10
 0119 E100      	jc skip4h
 011B 8537      	add r0,$37 ; 'A'-10
                out4h00:
 011D 8530      	add r0,$30
                
                out4h01:
 011F 60        	push w0
                
 0120 49        	mov r1,r0
 0121 C8        	shr r0
 0122 C8        	shr r0
 0123 C8        	shr r0
 0124 C8        	shr r0
                
 0125 FA2200    	call out2h
 0128 48        	mov r0,r1
                
 0129 68        	pop w0
 012A 6E        	ret
                
                ;
                ;r1 : Recv char.
                ;
                rxchar:
 012B 64        	push a0
 012C 7C010F    	mov a0,$0f01
                rx00:
 012F 00        	ld r0,[a0]
 0130 49        	mov r1,r0
 0131 B8        	or r0,r0
 0132 E5FB      	jz rx00
                
 0134 6C        	pop a0
 0135 6E        	ret
                
                
                ;
                ; r1 : Ascii code to send.
                ;
                txchar:
 0136 64        	push a0
 0137 60        	push w0
                
 0138 7B00      	mov r3,0
 013A BF        	or r1, r3
 013B E40A      	jnz txexit
                
 013D 7C000F    	mov a0,$0f00	;	UART status register.
                tx00:
 0140 00        	ld r0, [a0]
 0141 A508      	and r0, $08
 0143 E5FB      	jz tx00		;	Wait for TxBuffer empty.
 0145 D6        	inc a0
 0146 09        	st [a0],r1
                
                txexit:
 0147 68        	pop w0
 0148 6C        	pop a0
 0149 6E        	ret
                
                ;
                ; r0 to hex -> w0
                ;
                out2h:	; r0 to hex
 014A A50F      	and r0, $0f
                
                
                outstring: ; A0 ptr of ascz string.
                
                outchar:
                
                waitsend:
                
                topmsg:
 014C 514255472056312E300A00
                	.db 'QBUG V1.0',$0a,0
 0157 FF        	nop
 0158

END ***
