
Label ***
 $0100 = START
 $0144 = OUT4H
 $017D = MSG
 $0132 = OUTSTRING
 $0109 = WAIT
 $0113 = RXCHAR
 $0155 = OUT2H
 $0117 = RX00
 $011E = TXCHAR
 $012F = TXEXIT
 $0128 = TX00
 $0134 = OUTCHAR
 $013F = OUTSTRING_EXIT
 $0142 = HALT
 $014D = OUTSPC
 $0165 = OUT2H_SKIP0
 $0174 = OUT2H_SKIP1

Constant ***
 $0F00 = UART_DATA
 $0F01 = UART_STATUS
 $FF00 = RXBUFF

Code ***
                ;
                uart_data eq $0f00
                uart_status eq $0f01
                rxbuff eq $ff00
                ;
                .org 0 ; swi 0
 0000 FEFD00    	jmp start
                .org 8 ; swi 1
 0008 FA3901    	call out4h
 000B FD        	iret
                .org 64 ; swi 8
 0040 FF        	nop
                
                .org $100
                
                start:
 0100 7F0000    	mov sp,0
                
                ;	mov r1, $a3
                ;	call out2h
                ;	mov r1, $5b
                ;	call out2h
                
                ;	mov r0,$ab
                ;	mov r1,$12
                ;	call out4h
                
 0103 7C7D01    	mov a0,msg
 0106 FA2900    	call outstring
                
                wait:
 0109 FA0700    	call rxchar
 010C 48        	mov r0,r1
 010D FA4500    	call out2h
 0110 FEF6FF    	jmp wait
                
                ;
                ;r1 : Recv char.
                ;
                rxchar:
 0113 64        	push a0
 0114 7C010F    	mov a0,$0f01
                rx00:
 0117 00        	ld r0,[a0]
 0118 49        	mov r1,r0
 0119 B8        	or r0,r0
 011A E5FB      	jz rx00	;	wait for receive.
                
 011C 6C        	pop a0
 011D 6E        	ret
                
                ; r1 : Ascii code to send.
                txchar:
 011E 64        	push a0
 011F 60        	push w0
                
 0120 7B00      	mov r3,0
 0122 BF        	or r1, r3
 0123 E50A      	jz txexit
                
 0125 7C000F    	mov a0,$0f00
                tx00:
 0128 00        	ld r0, [a0]
 0129 A508      	and r0, $08
 012B E5FB      	jz tx00		; Wait for TxBuffer empty.
 012D D6        	inc a0
 012E 09        	st [a0],r1
                
                txexit:
 012F 68        	pop w0
 0130 6C        	pop a0
 0131 6E        	ret
                
                
                ;
                ;  A0 ptr of ascz string.
                ;
                outstring:
 0132 64        	push a0
 0133 60        	push w0
                outchar:
 0134 00        	ld r0,[a0]
 0135 D6        	inc a0
 0136 49        	mov r1,r0
 0137 B9        	or r0,r1
 0138 E505      	jz outstring_exit
                
 013A FAE1FF    	call txchar
 013D EEF5      	jmps outchar
                
                outstring_exit:
 013F 68        	pop w0
 0140 6C        	pop a0
 0141 6E        	ret
                
                
                
                
                
                halt:
 0142 EEFE      	jmps halt
                
                ;
                ; w0 Hex to send.
                ;
                out4h:
 0144 FA0E00    	call out2h
 0147 62        	swb w0
 0148 FA0A00    	call out2h
 014B 62        	swb w0
 014C 6E        	ret
                
                ;
                ; Out space
                ;
                outspc:
 014D 60        	push w0
 014E 7920      	mov r1,$20
 0150 FACBFF    	call txchar
 0153 68        	pop w0
 0154 6E        	ret
                
                ;
                ; r1 Hex to send.
                ;
                out2h:
 0155 60        	push w0
 0156 61        	push w1
                
 0157 45        	mov r2,r1	; save
                
 0158 48        	mov r0,r1
                
 0159 C8        	shr r0
 015A C8        	shr r0
 015B C8        	shr r0
 015C C8        	shr r0
                
 015D A50F      	and r0,$0f
 015F AD0A      	cmp r0,10
 0161 E002      	jb out2h_skip0
                
 0163 8507      	add r0,7	; 'A'-'0'-10
                
                out2h_skip0:
 0165 8530      	add r0,48	;	'0'
                
 0167 49        	mov r1,r0
 0168 FAB3FF    	call txchar
                
 016B 40        	mov r0,r2	; restore
 016C A50F      	and r0,$0f
 016E AD0A      	cmp r0,10
 0170 E002      	jb out2h_skip1
                
 0172 8507      	add r0,7	; 'A'-'0'-10
                
                out2h_skip1:
 0174 8530      	add r0,48	;	'0'
                
 0176 49        	mov r1,r0
 0177 FAA4FF    	call txchar
                
 017A 69        	pop w1
 017B 68        	pop w0
 017C 6E        	ret
                
                msg:
 017D 514255472056312E300A00
                	.db 'QBUG V1.0', $0a, 0
 0188

END ***
